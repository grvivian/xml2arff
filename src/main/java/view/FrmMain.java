package view;

import config.Config;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UnsupportedLookAndFeelException;
import query.Query;
import query.QueryBasexServer;
import query.QuerySaxon;

/**
 *
 * @author glaucio
 */
public class FrmMain extends javax.swing.JFrame {

  private static final Query QUERYB = new QueryBasexServer();
  private static final Query QUERYS = new QuerySaxon();
  public static Locale local = new Locale("pt", "BR");
  public final static Config CONFIG = new Config();

  /**
   * Creates new form FrmMain
   */
  public FrmMain() {
    initComponents();

    try {
      CONFIG.lerConfig();
      switch (CONFIG.getLocal()) {
        case "de":
          local = new Locale("de", "DE");
          mAlemao.setSelected(true);
          break;
        case "es":
          local = new Locale("es", "ES");
          mEspanhol.setSelected(true);
          break;
        case "fr":
          local = new Locale("fr", "FR");
          mFrances.setSelected(true);
          break;
        case "en":
          local = new Locale("en", "US");
          mIngles.setSelected(true);
          break;
        case "it":
          local = new Locale("it", "IT");
          mItaliano.setSelected(true);
          break;
        case "pt":
          local = new Locale("pt", "BR");
          mPortugues.setSelected(true);
          break;
        default:
          local = new Locale("en", "US");
          mIngles.setSelected(true);
          break;
      }
      mIdiomaStateChanged(null);
    } catch (Exception ex) {
      Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
      JOptionPane.showMessageDialog(null, ex.getMessage());
    }
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    bgIdioma = new javax.swing.ButtonGroup();
    btExec = new javax.swing.JButton();
    jScrollPane1 = new javax.swing.JScrollPane();
    taXq = new javax.swing.JTextArea();
    lbConsultaXq = new javax.swing.JLabel();
    lbErro = new javax.swing.JLabel();
    jScrollPane3 = new javax.swing.JScrollPane();
    taRes = new javax.swing.JEditorPane();
    btExportar = new javax.swing.JButton();
    jMenuBar1 = new javax.swing.JMenuBar();
    mConfig = new javax.swing.JMenu();
    mConexao = new javax.swing.JMenuItem();
    mIdioma = new javax.swing.JMenu();
    mAlemao = new javax.swing.JRadioButtonMenuItem();
    mEspanhol = new javax.swing.JRadioButtonMenuItem();
    mFrances = new javax.swing.JRadioButtonMenuItem();
    mIngles = new javax.swing.JRadioButtonMenuItem();
    mItaliano = new javax.swing.JRadioButtonMenuItem();
    mPortugues = new javax.swing.JRadioButtonMenuItem();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("view/Bundle"); // NOI18N
    setTitle(bundle.getString("FrmMain.title")); // NOI18N

    btExec.setText(bundle.getString("FrmMain.btExec.text")); // NOI18N
    btExec.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btExecActionPerformed(evt);
      }
    });

    taXq.setColumns(20);
    taXq.setRows(5);
    jScrollPane1.setViewportView(taXq);

    lbConsultaXq.setText(bundle.getString("FrmMain.lbConsultaXq.text")); // NOI18N

    taRes.setEditable(false);
    taRes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    taRes.setDoubleBuffered(true);
    taRes.setName(""); // NOI18N
    jScrollPane3.setViewportView(taRes);

    btExportar.setText(bundle.getString("FrmMain.btExportar.text")); // NOI18N
    btExportar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btExportarActionPerformed(evt);
      }
    });

    mConfig.setText(bundle.getString("FrmMain.mConfig.text")); // NOI18N

    mConexao.setText(bundle.getString("FrmMain.mConexao.text")); // NOI18N
    mConexao.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        mConexaoActionPerformed(evt);
      }
    });
    mConfig.add(mConexao);

    jMenuBar1.add(mConfig);

    mIdioma.setText(bundle.getString("FrmMain.mIdioma.text")); // NOI18N
    bgIdioma.add(mIdioma);
    mIdioma.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        mIdiomaStateChanged(evt);
      }
    });

    bgIdioma.add(mAlemao);
    mAlemao.setText(bundle.getString("FrmMain.mAlemao.text")); // NOI18N
    mAlemao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/ge.png"))); // NOI18N
    mIdioma.add(mAlemao);

    bgIdioma.add(mEspanhol);
    mEspanhol.setText(bundle.getString("FrmMain.mEspanhol.text")); // NOI18N
    mEspanhol.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/es.png"))); // NOI18N
    mIdioma.add(mEspanhol);

    bgIdioma.add(mFrances);
    mFrances.setText(bundle.getString("FrmMain.mFrances.text")); // NOI18N
    mFrances.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/fr.png"))); // NOI18N
    mIdioma.add(mFrances);

    bgIdioma.add(mIngles);
    mIngles.setText(bundle.getString("FrmMain.mIngles.text")); // NOI18N
    mIngles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/uk.png"))); // NOI18N
    mIdioma.add(mIngles);

    bgIdioma.add(mItaliano);
    mItaliano.setText(bundle.getString("FrmMain.mItaliano.text")); // NOI18N
    mItaliano.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/it.png"))); // NOI18N
    mIdioma.add(mItaliano);

    bgIdioma.add(mPortugues);
    mPortugues.setText(bundle.getString("FrmMain.mPortugues.text")); // NOI18N
    mPortugues.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/pt.png"))); // NOI18N
    mIdioma.add(mPortugues);

    jMenuBar1.add(mIdioma);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(btExec)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btExportar)
            .addGap(52, 52, 52)
            .addComponent(lbErro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGap(524, 524, 524))
          .addGroup(layout.createSequentialGroup()
            .addComponent(lbConsultaXq)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
              .addComponent(jScrollPane1))
            .addContainerGap())))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(lbConsultaXq)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(1, 1, 1)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(btExec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btExportar))
          .addComponent(lbErro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
        .addContainerGap())
    );

    pack();
    setLocationRelativeTo(null);
  }// </editor-fold>//GEN-END:initComponents

  private void btExecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExecActionPerformed
    String res = "";
    int rec = 0;

    try {
      CONFIG.lerConfig();
      String t = CONFIG.getTypeOfConection();

      switch (t) {
        case "b":
          res = QUERYB.query(taXq.getText());
          rec = QUERYB.getRecords();
          break;
        case "s":
          res = QUERYS.query(taXq.getText());
          rec = QUERYS.getRecords();
          break;
        default:
          lbErro.setText("Type of Connection not Defined!");
          return;
      }

      //taRes.setRows(rec);
      taRes.setText(res);
      lbErro.setText("OK - " + rec + " Registro(s)");
    } catch (Exception ex) {
      lbErro.setText(ex.getMessage());
    }
  }//GEN-LAST:event_btExecActionPerformed

  private void btExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExportarActionPerformed
    try {
      FormGenerateArff f = new FormGenerateArff(this, true);
      f.setTexto(taRes.getText());

      Long inicio = System.currentTimeMillis();
      f.automatization(taXq.getText());
      Long fim = System.currentTimeMillis();
      System.out.println("Tempo de Automatização: " + ((fim - inicio) / 1000.0) + " seg.");

      f.setVisible(true);
    } catch (Exception ex) {
      Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
    }
  }//GEN-LAST:event_btExportarActionPerformed

  private void mIdiomaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_mIdiomaStateChanged
    try {
      if (mAlemao.isSelected()) {
        local = new Locale("de", "DE");
        CONFIG.setLocal("de");
      } else if (mEspanhol.isSelected()) {
        local = new Locale("es", "ES");
        CONFIG.setLocal("es");
      } else if (mFrances.isSelected()) {
        local = new Locale("fr", "FR");
        CONFIG.setLocal("fr");
      } else if (mIngles.isSelected()) {
        local = new Locale("en", "US");
        CONFIG.setLocal("en");
      } else if (mItaliano.isSelected()) {
        local = new Locale("it", "IT");
        CONFIG.setLocal("it");
      } else if (mPortugues.isSelected()) {
        local = new Locale("pt", "BR");
        CONFIG.setLocal("pt");
      }
      CONFIG.salvarConfig();

      ResourceBundle.clearCache();
      ResourceBundle bundle = ResourceBundle.getBundle("view/Bundle", local);

      setTitle(bundle.getString("FrmMain.title")); // NOI18N
      btExec.setText(bundle.getString("FrmMain.btExec.text")); // NOI18N
      lbConsultaXq.setText(bundle.getString("FrmMain.lbConsultaXq.text")); // NOI18N
      btExportar.setText(bundle.getString("FrmMain.btExportar.text")); // NOI18N
      mConfig.setText(bundle.getString("FrmMain.mConfig.text")); // NOI18N
      mConexao.setText(bundle.getString("FrmMain.mConexao.text")); // NOI18N
      mIdioma.setText(bundle.getString("FrmMain.mIdioma.text")); // NOI18N
      mAlemao.setText(bundle.getString("FrmMain.mAlemao.text")); // NOI18N
      mEspanhol.setText(bundle.getString("FrmMain.mEspanhol.text")); // NOI18N
      mFrances.setText(bundle.getString("FrmMain.mFrances.text")); // NOI18N
      mIngles.setText(bundle.getString("FrmMain.mIngles.text")); // NOI18N
      mItaliano.setText(bundle.getString("FrmMain.mItaliano.text")); // NOI18N
      mPortugues.setText(bundle.getString("FrmMain.mPortugues.text")); // NOI18N

      super.paint(this.getGraphics());
      //super.update(this.getGraphics());
    } catch (Exception ex) {
      Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
      JOptionPane.showMessageDialog(null, ex.getMessage());
    }
  }//GEN-LAST:event_mIdiomaStateChanged

  private void mConexaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mConexaoActionPerformed
    FrmConection f = new FrmConection();
    f.setVisible(true);
  }//GEN-LAST:event_mConexaoActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Windows".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
        if ("GTK+".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
      ex.printStackTrace();
    }

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      @Override
      public void run() {
        FrmMain f = new FrmMain();
        f.setVisible(true);
        f.setExtendedState(FrmMain.MAXIMIZED_BOTH);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.ButtonGroup bgIdioma;
  private javax.swing.JButton btExec;
  private javax.swing.JButton btExportar;
  private javax.swing.JMenuBar jMenuBar1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane3;
  private javax.swing.JLabel lbConsultaXq;
  private javax.swing.JLabel lbErro;
  private javax.swing.JRadioButtonMenuItem mAlemao;
  private javax.swing.JMenuItem mConexao;
  private javax.swing.JMenu mConfig;
  private javax.swing.JRadioButtonMenuItem mEspanhol;
  private javax.swing.JRadioButtonMenuItem mFrances;
  private javax.swing.JMenu mIdioma;
  private javax.swing.JRadioButtonMenuItem mIngles;
  private javax.swing.JRadioButtonMenuItem mItaliano;
  private javax.swing.JRadioButtonMenuItem mPortugues;
  private javax.swing.JEditorPane taRes;
  private javax.swing.JTextArea taXq;
  // End of variables declaration//GEN-END:variables
}
